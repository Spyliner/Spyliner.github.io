{"version":3,"file":"static/js/326.9cf3848b.chunk.js","mappings":"qOAEO,MAAMA,GAAqBC,EAAAA,EAAAA,IAAO,UAAPA,CAAiBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6IAStCC,GAAUH,EAAAA,EAAAA,IAAO,IAAPA,CAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sCAIrBG,GAAiBL,EAAAA,EAAAA,IAAO,MAAPA,CAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oIAS9BK,GAAiBP,EAAAA,EAAAA,IAAO,MAAPA,CAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mFAM9BO,GAAWT,EAAAA,EAAAA,IAAO,KAAPA,CAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,yKASvBS,GAAUX,EAAAA,EAAAA,IAAO,IAAPA,CAAWY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,8B,aCzBlC,MAyCA,GAAeW,EAAAA,EAAAA,IAAf,EAzCyBC,IAOC,IAPA,KACxBC,EAAI,MACJC,EAAK,QACLC,EAAO,QACPC,EAAO,EACPC,EAAC,GACDC,GACkBN,EAClB,OACEO,EAAAA,EAAAA,KAACtB,EAAkB,CAAAuB,UACjBD,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,UAAU,OAAMF,UACpBG,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAQ,gBAAgBC,MAAM,SAASR,GAAIA,EAAGE,SAAA,EACjDD,EAAAA,EAAAA,KAACQ,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGX,UAClCD,EAAAA,EAAAA,KAACa,EAAAA,EAAO,CAACC,IAAKpB,EAAMqB,MAAM,OAAOC,OAAO,YAE1ChB,EAAAA,EAAAA,KAACQ,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGX,UAClCG,EAAAA,EAAAA,MAACpB,EAAc,CAAAiB,SAAA,EACbD,EAAAA,EAAAA,KAAA,MAAAC,SAAKH,EAAEH,MACPK,EAAAA,EAAAA,KAAClB,EAAO,CAAAmB,SAAEH,EAAEF,MACZI,EAAAA,EAAAA,KAACd,EAAc,CAAAe,UACbD,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACC,QAAQ,gBAAeL,SACN,kBAAZJ,GACNA,EAAQoB,KAAI,CAACC,EAAWnB,KAEpBK,EAAAA,EAAAA,MAACI,EAAAA,EAAG,CAAUW,KAAM,GAAGlB,SAAA,EACrBD,EAAAA,EAAAA,KAACa,EAAAA,EAAO,CAACC,IAAKI,EAAKxB,KAAMqB,MAAM,OAAOC,OAAO,UAC7ChB,EAAAA,EAAAA,KAACZ,EAAQ,CAAAa,SAAEH,EAAEoB,EAAKvB,UAClBK,EAAAA,EAAAA,KAACV,EAAO,CAAAW,SAAEH,EAAEoB,EAAKtB,aAHTG,oBAaT,I,sBCjDlB,MAAMqB,GAAsBzC,EAAAA,EAAAA,IAAO,UAAPA,CAAiBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8NAavCC,GAAUH,EAAAA,EAAAA,IAAO,IAAPA,CAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sCAIrBG,GAAiBL,EAAAA,EAAAA,IAAO,MAAPA,CAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uIAS9BwC,GAAgB1C,EAAAA,EAAAA,IAAO,MAAPA,CAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gNCiC1C,GAAeW,EAAAA,EAAAA,IAAf,EAhDmBC,IAOO,IAPN,MAClBE,EAAK,QACLC,EAAO,OACP0B,EAAM,KACN5B,EAAI,EACJI,EAAC,GACDC,GACkBN,EAOlB,OACEO,EAAAA,EAAAA,KAACoB,EAAmB,CAAAnB,UAClBD,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,UAAU,QAAOF,UACrBG,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAQ,gBAAgBC,MAAM,SAASR,GAAIA,EAAGE,SAAA,EACjDD,EAAAA,EAAAA,KAACQ,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGX,UAClCG,EAAAA,EAAAA,MAACpB,EAAc,CAAAiB,SAAA,EACbD,EAAAA,EAAAA,KAAA,MAAAC,SAAKH,EAAEH,MACPK,EAAAA,EAAAA,KAAClB,EAAO,CAAAmB,SAAEH,EAAEF,MACZI,EAAAA,EAAAA,KAACqB,EAAa,CAAApB,SACO,kBAAXqB,GACNA,EAAOL,KAAI,CAACC,EAAWnB,KAEnBC,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CAELC,MAAON,EAAKM,MACZC,YAAY,EACZC,QAASA,IAtBb3B,KACA4B,SAASC,eAAe7B,GAChC8B,eAAe,CACrBC,SAAU,UACV,EAkBiCC,CAAS,SAAS9B,SAEhCH,EAAEoB,EAAKvB,QALHI,aAYnBC,EAAAA,EAAAA,KAACQ,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGX,UAClCD,EAAAA,EAAAA,KAACa,EAAAA,EAAO,CAACC,IAAKpB,EAAMqB,MAAM,OAAOC,OAAO,iBAI1B,IC/C1B,EANsBgB,GACD,SAAfA,EAAMC,MAAwBjC,EAAAA,EAAAA,KAACkC,EAAgB,IAAKF,IACrC,UAAfA,EAAMC,MAAyBjC,EAAAA,EAAAA,KAACmC,EAAiB,IAAKH,IACnD,I","sources":["components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const LeftContentSection = styled(\"section\")`\n  position: relative;\n  padding: 10rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-top: 4rem;\n  }\n`;\n\nexport const ServiceWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const MinTitle = styled(\"h6\")`\n  font-size: 15px;\n  line-height: 1rem;\n  padding: 0.5rem 0;\n  text-transform: uppercase;\n  color: #000;\n  font-family: \"Motiva Sans Light\", sans-serif;\n`;\n\nexport const MinPara = styled(\"p\")`\n  font-size: 13px;\n`;\n","import { Row, Col } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { SvgIcon } from \"../../../common/SvgIcon\";\nimport { ContentBlockProps } from \"../types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport {\n  LeftContentSection,\n  Content,\n  ContentWrapper,\n  ServiceWrapper,\n  MinTitle,\n  MinPara,\n} from \"./styles\";\n\nconst LeftContentBlock = ({\n  icon,\n  title,\n  content,\n  section,\n  t,\n  id,\n}: ContentBlockProps) => {\n  return (\n    <LeftContentSection>\n      <Fade direction=\"left\">\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\n          <Col lg={11} md={11} sm={12} xs={24}>\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\n          </Col>\n          <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n              <h6>{t(title)}</h6>\n              <Content>{t(content)}</Content>\n              <ServiceWrapper>\n                <Row justify=\"space-between\">\n                  {typeof section === \"object\" &&\n                    section.map((item: any, id: number) => {\n                      return (\n                        <Col key={id} span={11}>\n                          <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\n                          <MinTitle>{t(item.title)}</MinTitle>\n                          <MinPara>{t(item.content)}</MinPara>\n                        </Col>\n                      );\n                    })}\n                </Row>\n              </ServiceWrapper>\n            </ContentWrapper>\n          </Col>\n        </Row>\n      </Fade>\n    </LeftContentSection>\n  );\n};\n\nexport default withTranslation()(LeftContentBlock);\n","import styled from \"styled-components\";\n\nexport const RightBlockContainer = styled(\"section\")`\n  position: relative;\n  padding: 10rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 8rem 0 6rem;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 4rem 0 3rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-bottom: 4rem;\n  }\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 20px;\n  }\n`;\n","import { Row, Col } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { SvgIcon } from \"../../../common/SvgIcon\";\nimport { Button } from \"../../../common/Button\";\nimport { ContentBlockProps } from \"../types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport {\n  RightBlockContainer,\n  Content,\n  ContentWrapper,\n  ButtonWrapper,\n} from \"./styles\";\n\nconst RightBlock = ({\n  title,\n  content,\n  button,\n  icon,\n  t,\n  id,\n}: ContentBlockProps) => {\n  const scrollTo = (id: string) => {\n    const element = document.getElementById(id) as HTMLDivElement;\n    element.scrollIntoView({\n      behavior: \"smooth\",\n    });\n  };\n  return (\n    <RightBlockContainer>\n      <Fade direction=\"right\">\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\n          <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n              <h6>{t(title)}</h6>\n              <Content>{t(content)}</Content>\n              <ButtonWrapper>\n                {typeof button === \"object\" &&\n                  button.map((item: any, id: number) => {\n                    return (\n                      <Button\n                        key={id}\n                        color={item.color}\n                        fixedWidth={true}\n                        onClick={() => scrollTo(\"about\")}\n                      >\n                        {t(item.title)}\n                      </Button>\n                    );\n                  })}\n              </ButtonWrapper>\n            </ContentWrapper>\n          </Col>\n          <Col lg={11} md={11} sm={12} xs={24}>\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\n          </Col>\n        </Row>\n      </Fade>\n    </RightBlockContainer>\n  );\n};\n\nexport default withTranslation()(RightBlock);\n","import LeftContentBlock from \"./LeftContentBlock\";\nimport RightContentBlock from \"./RightContentBlock\";\nimport { ContentBlockProps } from \"./types\";\n\nconst ContentBlock = (props: ContentBlockProps) => {\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\n  return null;\n};\n\nexport default ContentBlock;\n"],"names":["LeftContentSection","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","ContentWrapper","_templateObject3","ServiceWrapper","_templateObject4","MinTitle","_templateObject5","MinPara","_templateObject6","withTranslation","_ref","icon","title","content","section","t","id","_jsx","children","Fade","direction","_jsxs","Row","justify","align","Col","lg","md","sm","xs","SvgIcon","src","width","height","map","item","span","RightBlockContainer","ButtonWrapper","button","Button","color","fixedWidth","onClick","document","getElementById","scrollIntoView","behavior","scrollTo","props","type","LeftContentBlock","RightContentBlock"],"sourceRoot":""}